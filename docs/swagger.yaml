definitions:
  database.Event:
    properties:
      date:
        type: string
      description:
        minLength: 10
        type: string
      id:
        type: integer
      location:
        minLength: 3
        type: string
      name:
        minLength: 3
        type: string
      ownerId:
        type: integer
    required:
    - date
    - description
    - location
    - name
    type: object
  database.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  main.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  main.loginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  main.loginResponse:
    properties:
      token:
        type: string
    type: object
  main.registerRequest:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
info:
  contact:
    email: dacostaaboagyesolomon@gmail.com
    name: Solomon Aboagye
    url: https://github.com/aboagye-dacosta
  description: This is a simple REST API built with Go. It allows users to create,
    read, update, and delete events. The API is built using the Gin framework.
  title: Event Rest API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/main.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Login user
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/main.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Register user
      tags:
      - Auth
  /api/v1/events:
    get:
      consumes:
      - application/json
      description: Get a list of all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all events
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Create a new event
      parameters:
      - description: Event to create
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/database.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create an event
      tags:
      - Events
  /api/v1/events/{id}:
    get:
      consumes:
      - application/json
      description: Get a single event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get event
      tags:
      - Events
    put:
      consumes:
      - application/json
      description: Update an existing event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/database.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an event
      tags:
      - Events
  /api/v1/events/{id}/attendees:
    get:
      consumes:
      - application/json
      description: Get a list of attendees for an event
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/database.User'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get attendees
      tags:
      - Attendees
  /api/v1/events/{id}/attendees/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete an attendee from an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an attendee
      tags:
      - Attendees
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an event
      tags:
      - Events
securityDefinitions:
  BearerAuth:
    description: Type "Bearer Token" in the format **Bearer {token}** to authenticate
      the request.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
